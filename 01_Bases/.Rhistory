install.packages(c("caret", "ggplot2"))
install.packages("mlr")
install.packages("mvoutlier")
install.packages(c("assertthat", "backports", "BH", "broom", "car", "carData", "caret", "caTools", "checkmate", "cli", "colorspace", "curl", "CVST", "data.table", "ddalpha", "digest", "dimRed", "dplyr", "e1071", "evaluate", "flexmix", "forcats", "formatR", "fpc", "geometry", "ggplot2", "glue", "gower", "haven", "highr", "htmlwidgets", "httpuv", "httr", "ipred", "iterators", "jsonlite", "JuliaCall", "kernlab", "knitr", "laeken", "later", "lava", "lazyeval", "lme4", "magic", "manipulateWidget", "maptools", "markdown", "mclust", "mime", "mlr", "ModelMetrics", "modeltools", "munsell", "mvtnorm", "nloptr", "openssl", "openxlsx", "ParamHelpers", "pillar", "pkgconfig", "pls", "prabclus", "processx", "progress", "psych", "purrr", "quantreg", "R6", "Rcpp", "RcppEigen", "RcppRoll", "readr", "readxl", "recipes", "reshape", "reticulate", "rgl", "rio", "rlang", "rmarkdown", "robCompositions", "robustbase", "rrcov", "scales", "sfsmisc", "shiny", "showtext", "sp", "stringi", "stringr", "sysfonts", "testit", "testthat", "tibble", "tidyr", "tidyselect", "tikzDevice", "tinytex", "trimcluster", "utf8", "VIM", "webshot", "xfun", "XML", "xtable", "yaml", "zCompositions", "zip", "zoo"))
# Referências
# https://cran.r-project.org/web/packages/data.table/vignettes/datatable-intro.html
# Load packages
library(data.table)
library(readxl)
library(stringr)
# Set working directory and load data
setwd("C:/Users/anacb/Documents/Poli/TCC/01_Bases")
sellin <- read_excel("SellIn.xlsx", col_types = c("text",
"text", "text", "text", "text", "text",
"text", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric"))
sellout <- read_excel("SellOut.xlsx", col_types = c("text",
"text", "text", "text", "numeric", "numeric",
"numeric", "skip", "skip"))
dt_sellin <- setDT(sellin)
dt_sellout <- setDT(sellout)
# Data prep
dt_sellout <- dt_sellout[STORE_CNPJ == "21137886000190",]
dt_sellout$STORE_CNPJ <- NULL
dt_sellout$CREATE_DATE <- tstrsplit(dt_sellout$CREATE_DATE, " ")[1]
dt_sellout$CREATE_DATE <- str_replace(dt_sellout$CREATE_DATE, "APR", "04")
dt_sellout$CREATE_DATE <- as.Date(dt_sellout$CREATE_DATE, "%d-%m-%y")
dt_sellin <-dt_sellin[,c(-3:-4)]
dt_sellin$ISSUE_DATE <- tstrsplit(dt_sellin$ISSUE_DATE, " ")[1]
dt_sellin$ISSUE_DATE <- str_replace(dt_sellin$ISSUE_DATE, "APR", "04")
dt_sellin$ISSUE_DATE <- as.Date(dt_sellin$ISSUE_DATE, "%d-%m-%y")
dt_sellin$ISSUE_DATE <- tstrsplit(dt_sellin$ISSUE_DATE, " ")[1]
dt_sellin$SECURITY_VALUE <- NULL
dt_sellin$TOTAL_FREIGHT <- NULL
# Deparas
depara_ean_descricao <- unique(dt_sellout[,c(2,3)])
depara_ean_product_name <- unique(dt_sellin[,c(3,5)])
# Analise Exploratoria
receita_produto <- dt_sellout[, lapply(.SD, sum), by = .(EAN, DESCRICAO), .SDcols="SUBTOTAL"]
receita_produto <- receita_produto[order(-receita_produto$SUBTOTAL)]
receita_total <- sum(receita_produto$SUBTOTAL)
vendas_produto <- dt_sellout[, lapply(.SD, sum), by = .(EAN, DESCRICAO), .SDcols="QTY"]
vendas_produto <- vendas_produto[order(-vendas_produto$QTY)]
vendas_total <- sum(vendas_produto$QTY)
top15_receita <- receita_produto[1:15,]
top10_vendas <- vendas_produto[1:10,]
(sum(top15_receita$SUBTOTAL)/receita_total)*100
(sum(top10_vendas$QTY)/vendas_total)*100
produtos_interesse <- merge(top15_receita, top10_vendas, sort = F, by = c("EAN", "DESCRICAO"))
produtos_interesse <- produtos_interesse[EAN != 17,]
(sum(produtos_interesse$SUBTOTAL)/receita_total)*100
(sum(produtos_interesse$QTY)/vendas_total)*100
library(lubridate)
library(zoo)
View(dt_sellin)
View(dt_sellout)
qty_total_dia <- dt_sellout[,c(1,3,5)]
View(qty_total_dia)
class(qty_total_dia$QTY)
qty_total_dia <- dt_sellout[,c(1,2,5)]
qty_total_dia <- dt_sellout[,c(1,2,3,5)]
qty_total_dia <- qty_total_dia[, ':=' (QTY_DIA = sum(QTY)), by = .(CREATE_DATE, EAN, DESCRICAO)]
View(qty_total_dia)
table(qty_total_dia$CREATE_DATE)
qty_total_dia[EAN == "300093" & CREATE_DATE == "2019-04-01",]
qty_total_dia[EAN == "300093" & CREATE_DATE == "2019-04-01",]$QTY
sum(qty_total_dia[EAN == "300093" & CREATE_DATE == "2019-04-01",]$QTY)
qty_total_dia <- qty_total_dia[, ':=' (N_VENDAS_DIA = .(.N)), by = .(CREATE_DATE, EAN, DESCRICAO)]
qty_total_dia <- dt_sellout[,c(1,2,3,5)]
qty_total_dia <- qty_total_dia[, ':=' (QTY_TOTAL = sum(QTY)), by = .(CREATE_DATE, EAN, DESCRICAO)]
qty_total_dia <- qty_total_dia[, ':=' (N_VENDAS = .(.N)), by = .(CREATE_DATE, EAN, DESCRICAO)]
View(dt_sellout)
qty_total_dia <- qty_total_dia[, ':=' (QTY_MEDIA = mean(QTY)), by = .(CREATE_DATE, EAN, DESCRICAO)]
View(qty_total_dia)
# Referências
# https://cran.r-project.org/web/packages/data.table/vignettes/datatable-intro.html
# Load packages
library(data.table)
library(readxl)
library(stringr)
library(lubridate)
library(zoo)
# Set working directory and load data
setwd("C:/Users/anacb/Documents/Poli/TCC/01_Bases")
sellin <- read_excel("SellIn.xlsx", col_types = c("text",
"text", "text", "text", "text", "text",
"text", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric"))
sellout <- read_excel("SellOut.xlsx", col_types = c("text",
"text", "text", "text", "numeric", "numeric",
"numeric", "skip", "skip"))
dt_sellin <- setDT(sellin)
dt_sellout <- setDT(sellout)
# Data prep
dt_sellout <- dt_sellout[STORE_CNPJ == "21137886000190",]
dt_sellout$STORE_CNPJ <- NULL
dt_sellout$CREATE_DATE <- tstrsplit(dt_sellout$CREATE_DATE, " ")[1]
dt_sellout$CREATE_DATE <- str_replace(dt_sellout$CREATE_DATE, "APR", "04")
dt_sellout$CREATE_DATE <- as.Date(dt_sellout$CREATE_DATE, "%d-%m-%y")
dt_sellin <-dt_sellin[,c(-3:-4)]
dt_sellin$ISSUE_DATE <- tstrsplit(dt_sellin$ISSUE_DATE, " ")[1]
dt_sellin$ISSUE_DATE <- str_replace(dt_sellin$ISSUE_DATE, "APR", "04")
dt_sellin$ISSUE_DATE <- as.Date(dt_sellin$ISSUE_DATE, "%d-%m-%y")
dt_sellin$ISSUE_DATE <- tstrsplit(dt_sellin$ISSUE_DATE, " ")[1]
dt_sellin$SECURITY_VALUE <- NULL
dt_sellin$TOTAL_FREIGHT <- NULL
# Deparas
depara_ean_descricao <- unique(dt_sellout[,c(2,3)])
depara_ean_product_name <- unique(dt_sellin[,c(3,5)])
# Analise Exploratoria
receita_produto <- dt_sellout[, lapply(.SD, sum), by = .(EAN, DESCRICAO), .SDcols="SUBTOTAL"]
receita_produto <- receita_produto[order(-receita_produto$SUBTOTAL)]
receita_total <- sum(receita_produto$SUBTOTAL)
vendas_produto <- dt_sellout[, lapply(.SD, sum), by = .(EAN, DESCRICAO), .SDcols="QTY"]
vendas_produto <- vendas_produto[order(-vendas_produto$QTY)]
vendas_total <- sum(vendas_produto$QTY)
top15_receita <- receita_produto[1:15,]
top10_vendas <- vendas_produto[1:10,]
(sum(top15_receita$SUBTOTAL)/receita_total)*100
(sum(top10_vendas$QTY)/vendas_total)*100
produtos_interesse <- merge(top15_receita, top10_vendas, sort = F, by = c("EAN", "DESCRICAO"))
produtos_interesse <- produtos_interesse[EAN != 17,]
(sum(produtos_interesse$SUBTOTAL)/receita_total)*100
(sum(produtos_interesse$QTY)/vendas_total)*100
View(dt_sellin[EAN %in% produtos_interesse$EAN,])
View(dt_sellout[EAN %in% produtos_interesse$EAN,])
variaveis <- dt_sellout[,c(1,2,3,5)]
variaveis <- variaveis[, ':=' (QTY_TOTAL = sum(QTY)), by = .(CREATE_DATE, EAN, DESCRICAO)]
variaveis <- variaveis[, ':=' (N_VENDAS = .(.N)), by = .(CREATE_DATE, EAN, DESCRICAO)]
variaveis <- variaveis[, ':=' (QTY_MEDIA = mean(QTY)), by = .(CREATE_DATE, EAN, DESCRICAO)]
View(variaveis)
3.74
3.74/25
variaveis <- variaveis[, ':=' (QTY_SD = sd(QTY)), by = .(CREATE_DATE, EAN, DESCRICAO)]
View(variaveis)
variaveis[is.na(QTY_SD),]$QTY_SD <- 0
base_treino <- unique(variaveis[,-4])
variaveis[,-4]
unique(variaveis[,-4])
variaveis <- dt_sellout[,c(1,2,3,5)]
variaveis <- variaveis[, ':=' (QTY_TOTAL = sum(QTY)), by = .(CREATE_DATE, EAN, DESCRICAO)]
variaveis <- variaveis[, ':=' (N_VENDAS = count(QTY)), by = .(CREATE_DATE, EAN, DESCRICAO)]
variaveis <- variaveis[, ':=' (QTY_MEDIA = mean(QTY)), by = .(CREATE_DATE, EAN, DESCRICAO)]
variaveis <- variaveis[, ':=' (QTY_SD = sd(QTY)), by = .(CREATE_DATE, EAN, DESCRICAO)]
variaveis <- dt_sellout[,c(1,2,3,5)]
variaveis <- variaveis[, ':=' (QTY_TOTAL = sum(QTY)), by = .(CREATE_DATE, EAN, DESCRICAO)]
variaveis <- variaveis[, ':=' (N_VENDAS = length(QTY)), by = .(CREATE_DATE, EAN, DESCRICAO)]
variaveis <- variaveis[, ':=' (QTY_MEDIA = mean(QTY)), by = .(CREATE_DATE, EAN, DESCRICAO)]
variaveis <- variaveis[, ':=' (QTY_SD = sd(QTY)), by = .(CREATE_DATE, EAN, DESCRICAO)]
variaveis[is.na(QTY_SD),]$QTY_SD <- 0
base_treino <- unique(variaveis[,-4])
View(base_treino)
ts_pao_frances <- base_treino[EAN == "300096",]
View(ts_pao_frances)
ts
?ts
ts(ts_pao_frances, frequency = 7)
ts(ts_pao_frances$QTY_TOTAL, frequency = 7)
View(ts_pao_frances)
ts_pao_frances <- ts(ts_pao_frances$QTY_TOTAL, frequency = 7)
plot(ts_pao_frances)
View(base_treino[EAN == "300096",])
table(variaveis$CREATE_DATE)
variaveis[is.na(CREATE_DATE),]
sellout[is.na(CREATE_DATE),]
# Data prep
dt_sellout <- dt_sellout[STORE_CNPJ == "21137886000190",]
dt_sellout <- setDT(sellout)
# Data prep
dt_sellout <- dt_sellout[STORE_CNPJ == "21137886000190",]
dt_sellout$STORE_CNPJ <- NULL
dt_sellout[is.na(CREATE_DATE),]
tstrsplit(dt_sellout$CREATE_DATE, " ")[1]
is.na(tstrsplit(dt_sellout$CREATE_DATE, " ")[1])
dt_sellout$CREATE_DATE <- tstrsplit(dt_sellout$CREATE_DATE, " ")[1]
dt_sellout[is.na(CREATE_DATE),]
dt_sellout$CREATE_DATE <- str_replace(dt_sellout$CREATE_DATE, "APR", "04")
dt_sellout[is.na(CREATE_DATE),]
as.Date(dt_sellout$CREATE_DATE, "%d-%m-%y")
table(dt_sellout$CREATE_DATE)
dt_sellout$CREATE_DATE <- str_replace(dt_sellout$CREATE_DATE, "MAY", "05")
table(dt_sellout$CREATE_DATE)
dt_sellout$CREATE_DATE <- as.Date(dt_sellout$CREATE_DATE, "%d-%m-%y")
# Referências
# https://cran.r-project.org/web/packages/data.table/vignettes/datatable-intro.html
# Load packages
library(data.table)
library(readxl)
library(stringr)
library(lubridate)
library(zoo)
# Set working directory and load data
setwd("C:/Users/anacb/Documents/Poli/TCC/01_Bases")
sellin <- read_excel("SellIn.xlsx", col_types = c("text",
"text", "text", "text", "text", "text",
"text", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric"))
sellout <- read_excel("SellOut.xlsx", col_types = c("text",
"text", "text", "text", "numeric", "numeric",
"numeric", "skip", "skip"))
dt_sellin <- setDT(sellin)
dt_sellout <- setDT(sellout)
# Data prep
dt_sellout <- dt_sellout[STORE_CNPJ == "21137886000190",]
dt_sellout$STORE_CNPJ <- NULL
dt_sellout$CREATE_DATE <- tstrsplit(dt_sellout$CREATE_DATE, " ")[1]
dt_sellout$CREATE_DATE <- str_replace(dt_sellout$CREATE_DATE, "APR", "04")
dt_sellout$CREATE_DATE <- str_replace(dt_sellout$CREATE_DATE, "MAY", "05")
dt_sellout$CREATE_DATE <- as.Date(dt_sellout$CREATE_DATE, "%d-%m-%y")
dt_sellin <-dt_sellin[,c(-3:-4)]
dt_sellin$ISSUE_DATE <- tstrsplit(dt_sellin$ISSUE_DATE, " ")[1]
dt_sellin$ISSUE_DATE <- str_replace(dt_sellin$ISSUE_DATE, "APR", "04")
dt_sellin$CREATE_DATE <- str_replace(dt_sellin$CREATE_DATE, "MAY", "05")
dt_sellin$ISSUE_DATE <- as.Date(dt_sellin$ISSUE_DATE, "%d-%m-%y")
dt_sellin$ISSUE_DATE <- tstrsplit(dt_sellin$ISSUE_DATE, " ")[1]
dt_sellin$SECURITY_VALUE <- NULL
dt_sellin$TOTAL_FREIGHT <- NULL
# Deparas
depara_ean_descricao <- unique(dt_sellout[,c(2,3)])
depara_ean_product_name <- unique(dt_sellin[,c(3,5)])
# Analise Exploratoria
receita_produto <- dt_sellout[, lapply(.SD, sum), by = .(EAN, DESCRICAO), .SDcols="SUBTOTAL"]
receita_produto <- receita_produto[order(-receita_produto$SUBTOTAL)]
receita_total <- sum(receita_produto$SUBTOTAL)
vendas_produto <- dt_sellout[, lapply(.SD, sum), by = .(EAN, DESCRICAO), .SDcols="QTY"]
vendas_produto <- vendas_produto[order(-vendas_produto$QTY)]
vendas_total <- sum(vendas_produto$QTY)
top15_receita <- receita_produto[1:15,]
top10_vendas <- vendas_produto[1:10,]
(sum(top15_receita$SUBTOTAL)/receita_total)*100
(sum(top10_vendas$QTY)/vendas_total)*100
produtos_interesse <- merge(top15_receita, top10_vendas, sort = F, by = c("EAN", "DESCRICAO"))
produtos_interesse <- produtos_interesse[EAN != 17,]
(sum(produtos_interesse$SUBTOTAL)/receita_total)*100
(sum(produtos_interesse$QTY)/vendas_total)*100
View(dt_sellin[EAN %in% produtos_interesse$EAN,])
View(dt_sellout[EAN %in% produtos_interesse$EAN,])
# Load packages
library(data.table)
library(readxl)
library(stringr)
library(lubridate)
library(zoo)
variaveis <- dt_sellout[,c(1,2,3,5)]
variaveis <- variaveis[, ':=' (QTY_TOTAL = sum(QTY)), by = .(CREATE_DATE, EAN, DESCRICAO)]
variaveis <- variaveis[, ':=' (N_VENDAS = length(QTY)), by = .(CREATE_DATE, EAN, DESCRICAO)]
variaveis <- variaveis[, ':=' (QTY_MEDIA = mean(QTY)), by = .(CREATE_DATE, EAN, DESCRICAO)]
variaveis <- variaveis[, ':=' (QTY_SD = sd(QTY)), by = .(CREATE_DATE, EAN, DESCRICAO)]
variaveis[is.na(QTY_SD),]$QTY_SD <- 0
base_treino <- unique(variaveis[,-4])
ts_pao_frances <- base_treino[EAN == "300096",]
ts_pao_frances <- ts(ts_pao_frances$QTY_TOTAL, frequency = 7)
plot(ts_pao_frances)
ts_pao_frances <- ts(ts_pao_frances$QTY_TOTAL, frequency = 1)
ts_pao_frances <- ts(ts_pao_frances$QTY_TOTAL, frequency = 1)
ts_pao_frances <- base_treino[EAN == "300096",]
ts_pao_frances <- ts(ts_pao_frances$QTY_TOTAL, frequency = 1)
plot(ts_pao_frances)
ts_pao_frances <- ts(ts_pao_frances$QTY_TOTAL, frequency = 7)
ts_pao_frances <- base_treino[EAN == "300096",]
ts_pao_frances <- ts(ts_pao_frances$QTY_TOTAL, frequency = 7)
plot(ts_pao_frances)
View(variaveis)
